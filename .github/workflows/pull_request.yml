name: PR Quality Gate

on:
  pull_request:
    branches: [ "main" ]
    types: [opened, reopened, synchronize, ready_for_review]

concurrency:
  group: pr-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: gradle

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Grant execute permission
        run: chmod +x ./gradlew

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Decode google-services.json
        if: github.event.pull_request.head.repo.full_name == github.repository
        run: echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > composeApp/google-services.json

      - name: Run Unit Tests
        run: ./gradlew test --stacktrace

  run-code-analysis:
    name: Code Analysis
    runs-on: ubuntu-latest
    needs: run-tests

    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'

      - name: Grant execute permission
        run: chmod +x ./gradlew

      - name: Run Detekt
        run: ./gradlew detekt --stacktrace

      - name: Run SpotlessCheck
        run: ./gradlew spotlessCheck --stacktrace

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: code-analysis-reports
          path: |
            **/build/reports/detekt/**
            **/build/reports/spotless/**