[versions]
# Android SDK & Build tools
agp = "8.13.0"

# Accompanist
accompanistPermissions = "0.37.3"

# AndroidX
androidx-activityCompose = "1.11.0"
androidx-data-store = "1.1.7"
androidx-lifecycle = "2.9.3"

# Biometric
biometric = "1.1.0"

# Coil
coil = "3.3.0"
coilNetwork = "3.0.0-alpha08"

# Compose
composeCharts = "0.1.11"
calendar = "2.8.0"
compose = "1.10.0-alpha01"
uiAndroid = "1.10.0-alpha03"
composeHotReload = "1.0.0-beta06"

# Crashlytics & Firebase
crashlytics = "3.0.6"
firebase-gitlive-sdk = "2.3.0"
google-services = "4.4.3"

# Koin
koinCore = "4.1.1"

# Kotlin & KotlinX
kotlin = "2.2.20"
kotlinxCoroutines = "1.10.2"
kotlinxDatetime = "0.7.1"
kotlinxSerializationJson = "1.9.0"

# Ktor
ktor = "3.3.0"

# Lifecycle
lifecycleViewModel = "2.9.3"

# Mokkery
mokkery = "2.10.0"

# Napier
napier = "2.7.1"

# Navigation
navigation-compose = "2.9.0-rc01"

# Okio
okioVersion = "3.16.0"

# Startup
startupRuntime = "1.2.0"

# SQLDelight
sqldelight = "2.1.0"

# Testing
truthish = "1.0.3"
turbine = "1.2.1"

detekt = "1.23.8"

spotless = "7.2.1"

ktlint = "1.7.1"

room = "2.8.0"
ksp = "2.2.20-2.0.2"
sqlite = "2.6.0"

[libraries]

# Accompanist
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanistPermissions" }

# Android/AndroidX
android-library-gradle-plugin = { module = "com.android.library:com.android.library.gradle.plugin", version.ref = "agp" }
android-application-gradle-plugin = { module = "com.android.application:com.android.application.gradle.plugin", version.ref = "agp" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-biometric = { module = "androidx.biometric:biometric", version.ref = "biometric" }
androidx-datastore-core = { module = "androidx.datastore:datastore", version.ref = "androidx-data-store" }
androidx-data-store-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "androidx-data-store" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-startup-runtime = { module = "androidx.startup:startup-runtime", version.ref = "startupRuntime" }
androidx-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "uiAndroid" }
lifecycle-runtime-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }

# Calendar
calendar = { module = "com.kizitonwose.calendar:compose-multiplatform", version.ref = "calendar" }

# Charts
charts = { module = "io.github.ehsannarmani:compose-charts", version.ref = "composeCharts" }

# Coil
coil-compose = { group = "io.coil-kt.coil3", name = "coil-compose", version.ref = "coil" }
coil-network-ktor = { group = "io.coil-kt.coil3", name = "coil-network-ktor", version.ref = "coilNetwork" }

# Compose
compose-components-resources = { module = "org.jetbrains.compose.components:components-resources", name = "components-resources", version.ref = "compose" }
compose-components-ui-tooling-preview = { module = "org.jetbrains.compose.components:components-ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "org.jetbrains.compose.foundation:foundation", version.ref = "compose" }
compose-material3 = { module = "org.jetbrains.compose.material3:material3", version.ref = "compose" }
compose-runtime = { module = "org.jetbrains.compose.runtime:runtime", version.ref = "compose" }
compose-ui = { module = "org.jetbrains.compose.ui:ui", version.ref = "compose" }
compose-navigation = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigation-compose" }
compose-gradle-plugin = { module = "org.jetbrains.compose:org.jetbrains.compose.gradle.plugin", version.ref = "compose" }

# Coroutines
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
coroutines-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }
coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinxCoroutines" }

# Firebase
gitlive-firebase-kotlin-crashlytics = { module = "dev.gitlive:firebase-crashlytics", version.ref = "firebase-gitlive-sdk" }

# Koin
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koinCore" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koinCore" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koinCore" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koinCore" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koinCore" }

# Kotlin & KotlinX
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-multiplatform-gradle-plugin = { module = "org.jetbrains.kotlin.multiplatform:org.jetbrains.kotlin.multiplatform.gradle.plugin", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
primitive-adapters = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqldelight" }
serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }

detekt-gradle-plugin = { module = "io.gitlab.arturbosch.detekt:io.gitlab.arturbosch.detekt.gradle.plugin", version.ref = "detekt" }

# Ktor
ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { group = "io.ktor", name = "ktor-client-ios", version.ref = "ktor" }
ktor-client-okhttp = { group = "io.ktor", name = "ktor-client-okhttp", version.ref = "ktor" }

# Lifecycle
lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "lifecycleViewModel" }

# Logging
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
squareup-okio = { group = "com.squareup.okio", name = "okio", version.ref = "okioVersion" }

# SQLDelight
sqldelight-native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
sqldelight-jvm-driver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }

# Testing
truthish = { module = "com.varabyte.truthish:truthish", version.ref = "truthish" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

room-runtime = {module = "androidx.room:room-runtime", version.ref = "room"}
room-compiler = {module = "androidx.room:room-compiler", version.ref = "room"}
sqlite-bundled = {module = "androidx.sqlite:sqlite-bundled", version.ref = "sqlite"}

[plugins]

# Android
android-application = { id = "com.android.application", version.ref = "agp" }
android-kotlin-multiplatform-library = { id = "com.android.kotlin.multiplatform.library", version.ref = "agp" }
android-lint = { id = "com.android.lint", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }

# Compose
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "compose" }

# Kotlin/Kotlix
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

# Tests
mokkery = { id = "dev.mokkery", version.ref = "mokkery" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }

# Firebase
crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "crashlytics" }

# Google Services
google-services = { id = "com.google.gms.google-services", version.ref = "google-services" }

detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }

spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }

room = { id = "androidx.room", version.ref = "room" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

composeHotReload = { id = "org.jetbrains.compose.hot-reload", version.ref = "composeHotReload" }

[bundles]

dataStore = ["androidx-datastore-core", "androidx-data-store-preferences"]
koin = ["koin-core", "koin-compose", "koin-compose-viewmodel"]
test = ["kotlin-test", "truthish", "kotlinx-coroutines-test"]
viewmodel = ["lifecycle-viewmodel", "androidx-lifecycle-viewmodel", "lifecycle-runtime-compose"]